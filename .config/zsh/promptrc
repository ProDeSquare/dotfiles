#!/bin/sh

# autoload vcs and colors
autoload -Uz vcs_info
autoload -U colors && colors

# enable only git
zstyle ':vcs_info:*' enable git

precmd_vcs_info() { vcs_info }
precmd_functions+=( precmd_vcs_info )
setopt prompt_subst

zstyle ':vcs_info:git*+set-message:*' hooks git-untracked

+vi-git-untracked(){
    if [[ $(git rev-parse --is-inside-work-tree 2> /dev/null) == 'true' ]] && \
        git status --porcelain | grep '??' &> /dev/null ; then

        hook_com[staged]+='!' # signify new files with a bang
    fi
}

zstyle ':vcs_info:*' check-for-changes true
zstyle ':vcs_info:git:*' formats " %{$fg[blue]%}(%{$fg[red]%}%m%u%c%{$fg[yellow]%}îœ¥%{$fg[magenta]%} %b%{$fg[blue]%})%{$reset_color%}"

prompt_pwd () {
  local p=${${PWD:/~/\~}/#~\//\~/}
  psvar[1]="${(@j[/]M)${(@s[/]M)p##*/}##(.|)?}$p:t"
}

precmd_functions+=(prompt_pwd)

PROMPT="%{$fg[yellow]%}%n%{$reset_color%}@%M %{$fg[yellow]%}%1v%{$reset_color%}\$vcs_info_msg_0_> " # user@host dir (git info)>
# PROMPT="%{$fg[yellow]%}%n%{$reset_color%}@%M %{$fg[yellow]%}%~%{$reset_color%}\$vcs_info_msg_0_> " # user@host dir (git info)>
# PROMPT="%{$fg[blue]%}%~%{$reset_color%} " # dir
# PROMPT="%{$fg[yellow]%}%n %{$fg[cyan]%}in %{$fg[yellow]%}%1~%{$reset_color%}\$vcs_info_msg_0_> " # user in dir (git info) >
# PROMPT="%{$fg[yellow]%}%1~%{$reset_color%}\$vcs_info_msg_0_> " # dir (git info)>

# RPROMPT="%B%{$fg[yellow]%}[%{$fg[red]%}%h%{$fg[yellow]%}]%{$reset_color%}%b" # [history number]
